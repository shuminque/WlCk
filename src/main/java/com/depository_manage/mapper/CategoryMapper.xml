<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.depository_manage.mapper.CategoryMapper">

    <resultMap id="BaseResultMap" type="com.depository_manage.entity.Category">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="depository_id" property="depositoryId" jdbcType="INTEGER"/>
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="bracket_content" property="bracketContent" jdbcType="VARCHAR"/>

    </resultMap>

    <!-- Insert operation -->
    <insert id="insert" parameterType="com.depository_manage.entity.Category">
        INSERT INTO categories (depository_id, parent_id, title)
        VALUES (#{depositoryId}, #{parentId}, #{title})
    </insert>

    <!-- Select by ID operation -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT * FROM categories WHERE id = #{id}
    </select>

    <!-- Select all operation -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT * FROM categories
    </select>

    <!-- Update operation -->
    <update id="update" parameterType="map">
        UPDATE categories
        <set>
            <if test="depositoryId != null">
                depository_id = #{depositoryId},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="title != null">
                title = #{title},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- Delete operation -->
    <delete id="deleteCategory">
        DELETE FROM categories WHERE id = #{id}
    </delete>

    <select id="findAllByDepositoryId" resultMap="BaseResultMap">
        SELECT * FROM categories WHERE depository_id = #{depositoryId}
    </select>

<!--    <select id="getRecordsForCategory" resultType="com.depository_manage.pojo.RecordDTO" parameterType="java.util.Map">-->
<!--        SELECT-->
<!--            source_table,-->
<!--            id,-->
<!--            name,-->
<!--            model,-->
<!--            quantity,-->
<!--            unitPrice,-->
<!--            totalAmount,-->
<!--            record_date,-->
<!--            apply_remark,-->
<!--            category_title,-->
<!--            at_id-->
<!--        FROM (-->
<!--                 SELECT-->
<!--                     'once_fill' AS source_table,-->
<!--                     o.id,-->
<!--                     o.name as name,-->
<!--                     o.model,-->
<!--                     o.quantity,-->
<!--                     o.unit_price as unitPrice,-->
<!--                     o.quantity * o.unit_price as totalAmount,-->
<!--                     o.time AS record_date,-->
<!--                     o.apply_remark,-->
<!--                     c.title AS category_title,-->
<!--                     NULL AS at_id  &#45;&#45; 显示at_id为空-->
<!--                 FROM-->
<!--                     once_fill AS o-->
<!--                         JOIN categories AS c ON o.apply_remark LIKE CONCAT('%', c.title, '%')-->
<!--                 WHERE-->
<!--                             c.title = #{categoryName}-->
<!--                         AND c.depository_id = #{depositoryId}-->
<!--                         AND o.depositoryId = #{depositoryId}-->
<!--                         AND YEAR(o.time) = #{year}-->
<!--            AND MONTH(o.time) = #{month}-->

<!--        UNION ALL-->

<!--        &#45;&#45; 从 depository_record 表中获取记录-->
<!--        SELECT-->
<!--            'depository_record' AS source_table,-->
<!--            d.id,-->
<!--            d.mname AS name,-->
<!--            d.model,-->
<!--            d.quantity,-->
<!--            d.price as unitPrice,-->
<!--            d.quantity * d.price as totalAmount,-->
<!--            d.apply_time AS record_date,-->
<!--            d.apply_remark,-->
<!--            c.title AS category_title,-->
<!--            d.at_id-->
<!--        FROM-->
<!--            depository_record AS d-->
<!--                JOIN categories AS c ON d.apply_remark LIKE CONCAT('%', c.title, '%')-->
<!--        WHERE-->
<!--                    c.title = #{categoryName}-->
<!--                AND c.depository_id = #{depositoryId}-->
<!--                AND d.depository_id = #{depositoryId}-->
<!--                AND YEAR(d.apply_time) = #{year}-->
<!--          AND MONTH(d.apply_time) = #{month}-->
<!--            ) AS combined-->
<!--        ORDER BY-->
<!--            CASE WHEN at_id IS NULL THEN 1 ELSE 0 END, &#45;&#45; 首先根据at_id是否为NULL进行排序-->
<!--            at_id ASC  &#45;&#45; 然后以at_id升序排列-->

<!--    </select>-->
<!--不重复-->
    <select id="getRecordsForCategory" resultType="com.depository_manage.pojo.RecordDTO" parameterType="java.util.Map">
        SELECT
            source_table,
            name,
            model,
            SUM(quantity) AS quantity,
            SUM(totalAmount) AS totalAmount,
            apply_remark,
            category_title,
            at_id
        FROM (
                 -- 一次性领用
                 SELECT
                     'once_fill' AS source_table,
                     o.name AS name,
                     o.model,
                     o.quantity,
                     o.quantity * o.unit_price AS totalAmount,
                     o.apply_remark,
                     c.title AS category_title,
                     NULL AS at_id
                 FROM
                     once_fill AS o
                         JOIN
                     categories c ON RIGHT(SUBSTRING_INDEX(o.apply_remark, '-', -1), LENGTH(c.title)) = c.title
        WHERE
            c.title = #{categoryName}
          AND c.depository_id = #{depositoryId}
          AND o.depositoryId = #{depositoryId}
          AND YEAR(o.time) = #{year}
          AND MONTH(o.time) = #{month}
          AND o.introduce != '立项'

        UNION ALL

        -- 出库记录
        SELECT
            'depository_record' AS source_table,
            d.mname AS name,
            d.model,
            d.quantity,
            d.quantity * d.price AS totalAmount,
            d.apply_remark,
            c.title AS category_title,
            d.at_id
        FROM
            depository_record AS d
                JOIN
            categories c ON RIGHT(SUBSTRING_INDEX(d.apply_remark, '-', -1), LENGTH(c.title)) = c.title
        WHERE
            c.title = #{categoryName}
          AND c.depository_id = #{depositoryId}
          AND d.depository_id = #{depositoryId}
          AND YEAR(d.apply_time) = #{year}
          AND MONTH(d.apply_time) = #{month}
          AND d.type = 0
          AND d.review_pass = 1

        UNION ALL

        -- 领用退回（冲销）
        SELECT
            'depository_record_return' AS source_table,
            d.mname AS name,
            d.model,
            -d.quantity AS quantity,
            -(d.quantity * d.price) AS totalAmount,
            d.apply_remark,
            c.title AS category_title,
            d.at_id
        FROM
            depository_record AS d
                JOIN
            categories c ON RIGHT(SUBSTRING_INDEX(d.apply_remark, '-', -1), LENGTH(c.title)) = c.title
        WHERE
            c.title = #{categoryName}
          AND c.depository_id = #{depositoryId}
          AND d.depository_id = #{depositoryId}
          AND YEAR(d.apply_time) = #{year}
          AND MONTH(d.apply_time) = #{month}
          AND d.type = 1
          AND d.review_pass = 1
          AND d.apply_remark LIKE '领用退回%'
            ) AS combined
        GROUP BY
            source_table, name, model, apply_remark, category_title, at_id
        ORDER BY
            totalAmount DESC;
    </select>
    <select id="getRecordsForType" resultType="com.depository_manage.pojo.RecordDTO" parameterType="java.util.Map">
        SELECT
            source_table,
            name,
            model,
            SUM(quantity) AS quantity,
            ROUND(SUM(totalAmount), 2) AS totalAmount,
            material_type,
            at_id
        FROM (
                 -- 一次性领用
                 SELECT
                     'once_fill' AS source_table,
                     o.name,
                     o.model,
                     o.quantity,
                     o.quantity * o.unit_price AS totalAmount,
                     o.apply_remark,
                     mt.tname AS material_type,
                     NULL AS at_id
                 FROM
                     once_fill o
                         JOIN
                     material_type mt ON o.type_id = mt.id
                 WHERE
                     mt.tname = #{categoryName}
                         AND o.depositoryId = #{depositoryId}
                         AND YEAR(o.time) = #{year}
            AND MONTH(o.time) = #{month}
            AND o.introduce != '立项'

        UNION ALL

        -- 正常出库
        SELECT
            'depository_record' AS source_table,
            d.mname AS name,
            d.model,
            d.quantity,
            d.quantity * d.price AS totalAmount,
            d.apply_remark,
            mt.tname AS material_type,
            d.at_id
        FROM
            depository_record d
                JOIN
            material_type mt ON d.type_name = mt.tname
        WHERE
            mt.tname = #{categoryName}
                AND d.depository_id = #{depositoryId}
                AND d.type = 0
                AND d.review_pass = 1
                AND YEAR(d.apply_time) = #{year}
          AND MONTH(d.apply_time) = #{month}

        UNION ALL

        -- 领用退回（冲销，负数）
        SELECT
            'depository_record_return' AS source_table,
            d.mname AS name,
            d.model,
            -d.quantity AS quantity,
            -(d.quantity * d.price) AS totalAmount,
            d.apply_remark,
            mt.tname AS material_type,
            d.at_id
        FROM
            depository_record d
                JOIN
            material_type mt ON d.type_name = mt.tname
        WHERE
            mt.tname = #{categoryName}
                AND d.depository_id = #{depositoryId}
                AND d.type = 1
                AND d.review_pass = 1
                AND d.apply_remark LIKE '领用退回%'
                AND YEAR(d.apply_time) = #{year}
          AND MONTH(d.apply_time) = #{month}
            ) AS combined
        GROUP BY
            source_table, name, model, material_type, at_id
        ORDER BY
            totalAmount DESC;
    </select>
    <select id="getRecordsForTypeList"
            resultType="com.depository_manage.pojo.RecordDTO"
            parameterType="java.util.Map">

        SELECT
        source_table,
        name,
        model,
        SUM(quantity) AS quantity,
        ROUND(SUM(totalAmount), 2) AS totalAmount,
        material_type,
        at_id
        FROM (
        -- 一次性领用
        SELECT
        'once_fill' AS source_table,
        o.name,
        o.model,
        o.quantity,
        o.quantity * o.unit_price AS totalAmount,
        o.apply_remark,
        mt.tname AS material_type,
        NULL AS at_id
        FROM once_fill o
        JOIN material_type mt ON o.type_id = mt.id
        WHERE mt.tname IN
        <foreach item="item" collection="categoryTitles" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND o.depositoryId = #{depositoryId}
        AND YEAR(o.time) = #{year}
        AND MONTH(o.time) = #{month}
        AND o.introduce != '立项'

        UNION ALL

        -- 正常出库
        SELECT
        'depository_record' AS source_table,
        d.mname AS name,
        d.model,
        d.quantity,
        d.quantity * d.price AS totalAmount,
        d.apply_remark,
        mt.tname AS material_type,
        d.at_id
        FROM depository_record d
        JOIN material_type mt ON d.type_name = mt.tname
        WHERE mt.tname IN
        <foreach item="item" collection="categoryTitles" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND d.depository_id = #{depositoryId}
        AND d.type = 0
        AND d.review_pass = 1
        AND YEAR(d.apply_time) = #{year}
        AND MONTH(d.apply_time) = #{month}

        UNION ALL

        -- 领用退回（冲销，负数）
        SELECT
        'depository_record_return' AS source_table,
        d.mname AS name,
        d.model,
        -d.quantity AS quantity,
        -(d.quantity * d.price) AS totalAmount,
        d.apply_remark,
        mt.tname AS material_type,
        d.at_id
        FROM depository_record d
        JOIN material_type mt ON d.type_name = mt.tname
        WHERE mt.tname IN
        <foreach item="item" collection="categoryTitles" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND d.depository_id = #{depositoryId}
        AND d.type = 1
        AND d.review_pass = 1
        AND d.apply_remark LIKE '领用退回%'
        AND YEAR(d.apply_time) = #{year}
        AND MONTH(d.apply_time) = #{month}
        ) AS combined
        GROUP BY source_table, name, model, material_type, at_id
        ORDER BY totalAmount DESC;
    </select>

</mapper>
