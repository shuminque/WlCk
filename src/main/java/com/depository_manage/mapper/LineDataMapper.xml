<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.depository_manage.mapper.LineDataMapper">

    <resultMap id="lineDataMap" type="com.depository_manage.entity.LineData">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="date" property="date" jdbcType="DATE" />
        <result column="lineName" property="lineName" jdbcType="VARCHAR" />
        <result column="production" property="production" jdbcType="INTEGER" />
        <result column="model" property="model" jdbcType="VARCHAR" /> <!-- 新增的 model 字段 -->
        <result column="craft" property="craft" jdbcType="VARCHAR" />
        <result column="diameter" property="diameter" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="allColumns">
        l.id, l.date, l.lineName, l.production, l.model, l.craft, l.diameter<!-- 添加 model 字段 -->
    </sql>

    <select id="findLineDataAll" resultMap="lineDataMap">
        SELECT
        <include refid="allColumns" />
        FROM line_data l
        order by date desc
    </select>

    <select id="findLineDataByCondition" resultMap="lineDataMap" parameterType="map">
        SELECT
        <include refid="allColumns" />
        FROM line_data l WHERE 1 = 1
        <if test="id != null">
            AND l.id = #{id}
        </if>
        <if test="startDate != null and endDate != null">
            AND l.date BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="lineName != null">
            AND l.lineName = #{lineName}
        </if>
        <if test="production != null">
            AND l.production = #{production}
        </if>
        <if test="model != null">
            AND l.model = #{model} <!-- 添加 model 的条件查询 -->
        </if>
    </select>

    <select id="findLineDataByDate" resultMap="lineDataMap" parameterType="date">
        SELECT
        <include refid="allColumns" />
        FROM line_data l WHERE l.date = #{date}
    </select>

    <select id="findLineDataById" resultMap="lineDataMap" parameterType="integer">
        SELECT
        <include refid="allColumns" />
        FROM line_data l WHERE l.id = #{id}
    </select>

    <insert id="insertLineData" parameterType="map">
        INSERT INTO line_data (
            date, lineName, production, model, craft, diameter
        ) VALUES (
                     #{date},
                     #{lineName},
                     #{production},
                     #{model},
                     (SELECT c.craft FROM craft c WHERE c.lineName = #{lineName} LIMIT 1),
                 (SELECT s.diameter
                         FROM series s
                         WHERE #{model} LIKE CONCAT('%', s.seriesName, '%')
                         ORDER BY LENGTH(s.seriesName) DESC
                         LIMIT 1)
            )
    </insert>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO line_data (
        date, lineName, production, model, craft, diameter
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.date},
            #{item.lineName},
            #{item.production},
            #{item.model},
            (SELECT c.craft FROM craft c WHERE c.lineName = #{item.lineName} LIMIT 1),
            (SELECT s.diameter
            FROM series s
            WHERE #{item.model} LIKE CONCAT('%', s.seriesName, '%')
            ORDER BY LENGTH(s.seriesName) DESC
            LIMIT 1)
            )
        </foreach>
    </insert>



    <update id="updateLineData" parameterType="map">
        UPDATE line_data
        <set>
            <if test="date != null"> date = #{date}, </if>
            <if test="lineName != null"> lineName = #{lineName}, </if>
            <if test="production != null"> production = #{production}, </if>
            <if test="model != null"> model = #{model}, </if>
            <if test="craft != null"> craft = #{craft},</if>
            <if test="diameter != null"> diameter = #{diameter} </if>
        </set>
        WHERE id = #{id};
    </update>

    <delete id="deleteLineDataById" parameterType="int">
        DELETE FROM line_data WHERE id = #{id}
    </delete>

    <select id="findCountByCondition" parameterType="map" resultType="integer">
        SELECT
        count(*)
        FROM line_data l WHERE 1=1
        <if test="id != null">
            AND l.id = #{id}
        </if>
        <if test="startDate != null and endDate != null">
            AND l.date BETWEEN #{startDate} AND #{endDate}
        </if>
        <if test="lineName != null">
            AND l.lineName = #{lineName}
        </if>
        <if test="production != null">
            AND l.production = #{production}
        </if>
        <if test="model != null">
            AND l.model = #{model} <!-- 添加 model 的条件查询 -->
        </if>
        <if test="craft != null">
            AND l.craft = #{craft} <!-- 添加 craft 的条件查询 -->
        </if>
    </select>

    <select id="findLineDataByMonth" parameterType="map" resultType="com.depository_manage.entity.LineData">
        SELECT *
        FROM line_data
        WHERE YEAR(date) = #{year}
          AND MONTH(date) = #{month}
    </select>

<!--    <select id="findLineNameData" parameterType="map" resultType="com.depository_manage.entity.LineData">-->
<!--        SELECT *-->
<!--        FROM line_data-->
<!--        WHERE YEAR(date) = #{year}-->
<!--          AND lineName = #{lineName}-->
<!--        order by date;-->
<!--    </select>-->
    <select id="findLineNameData" parameterType="map" resultType="com.depository_manage.entity.LineData">
        SELECT
            date,
            lineName,
            craft,
            SUM(production) AS production,
            SUM(production) AS productionNormal
        FROM
            line_data
        WHERE
            YEAR(date) = #{year}
          AND lineName = #{lineName}
        GROUP BY
            date,
            lineName,
            craft
        ORDER BY
            date;
    </select>
    <select id="findYearlyProductionData" parameterType="map" resultType="com.depository_manage.entity.LineData">
        SELECT
            date,
            SUM(
            CASE
            WHEN craft IN ('专用工艺', '管材工艺') THEN production / 2
            ELSE production
            END
            ) AS production, -- 原本处理后的产量

            SUM(production) AS productionNormal -- 新增：未处理的原始产量
        FROM
            line_data
        WHERE
            YEAR(date) = #{year}
        GROUP BY
            date
        ORDER BY
            date;
    </select>
    <select id="findDiametersAll" resultType="string">
        SELECT DISTINCT diameter
        FROM line_data
        WHERE diameter IS NOT NULL
        ORDER BY
            CASE diameter
                WHEN '单玉小径' THEN 1
                WHEN '单玉中径' THEN 2
                WHEN '万向节' THEN 3
                WHEN 'MCB' THEN 4
                WHEN 'IKO' THEN 5
                WHEN 'RAB' THEN 6
                WHEN 'RJ' THEN 7
                ELSE 999
                END,
            diameter
    </select>

    <select id="findCategoryTitlesByDiameter" resultType="string">
        SELECT DISTINCT lineName FROM line_data WHERE diameter =  #{diameter}
    </select>
    <select id="selectMonthlyLinesByDiameter" resultType="com.depository_manage.entity.LineData">
        SELECT
            DATE_FORMAT(date, '%Y-%m') AS month,
        SUM(
            CASE
                WHEN diameter IN ('单玉小径', '单玉中径')
                     AND craft IN ('管材工艺', '专用工艺')
                THEN production / 2
                ELSE production
            END
        ) AS production,
        GROUP_CONCAT(DISTINCT lineName ORDER BY lineName SEPARATOR ',') AS lineName
        FROM
            line_data
        WHERE
            YEAR(date) = #{year}
          AND diameter = #{diameter}
        GROUP BY
            DATE_FORMAT(date, '%Y-%m')
        ORDER BY
            month
    </select>

</mapper>
